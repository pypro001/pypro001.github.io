<html>

    <code>

       // student who have score more then 60
       
TestNG is a testing framework inspired from JUnit and NUnit but introducing some new functionality that make it more powerful and easier to use, such as:
•	Annotations.
•	Run your tests in arbitrarily big thread pools with various policies available (all methods in their own thread, one thread per test class, etc...).
•	Test that your code is multithread safe.
•	Flexible test configuration.
•	Support for data-driven testing (with @DataProvider).
•	Support for parameters.
•	Powerful execution model (no more TestSuite).
•	Supported by a variety of tools and plug-ins (Eclipse, IDEA, Maven, etc...). • Embeds BeanShell for further flexibility.
•	Default JDK functions for runtime and logging (no dependencies).
•	Dependent methods for application server testing.

TestNG is designed to cover all categories of tests: unit, functional, end-to-end, integration, etc...

Steps:-
	Download testng-6.8.5 jarfile. 
    http://www.java2s.com/Code/JarDownload/testng/testng-6.8.5.jar.zip

package javaApplication22;
import org.testng.annotations.Test;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import jxl.Sheet;
import jxl.Workbook;
import jxl.write.Label;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import jxl.read.*;
import jxl.write.*;
import java.io.*;
import jxl.Cell;
import jxl.Sheet;
import jxl.Workbook;
import jxl.read.biff.BiffException;

public class countstudsNGTest {
@Test
public void testImportexport1() throws Exception,BiffException
{
FileInputStream fi = new FileInputStream("C:\\Users\\LAB PC -
42\\Documents\\ST\\student.xls "); Workbook w = Workbook.getWorkbook(fi);
Sheet s = w.getSheet(0);
String a[][] = new String[s.getRows()][s.getColumns()];
FileOutputStream fo = new FileOutputStream("C:\\Users\\LAB PC -
42\\Documents\\ST\\Book4.xls ");
WritableWorkbook wwb = Workbook.createWorkbook(fo);
WritableSheet ws = wwb.createSheet("result", 0);
int c=0;
for (int i = 0; i < s.getRows(); i++) {
for (int j = 0; j < s.getColumns();
j++) {
if(i >= 1) {
String b= new String();
b=s.getCell(3,i).getConten
ts(); int x=
Integer.parseInt(b);
if( x < 60)
{
c++;
break;
}
}
a[i][j] = s.getCell(j,
i).getContents(); Label l2 = new
Label(j, i-c, a[i][j]);
ws.addCell(l2);
}
}
wwb.write();
wwb.close();
}
}

    </code>

</html>
