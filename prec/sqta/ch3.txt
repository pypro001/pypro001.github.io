<html>

    <code>

       // Install Selenium server and demonstrate it using a script in Java/PHP
       
Introduction
1.	Selenium-RC is the solution for tests that need more that simple browser actions and linear execution
2.	Selenium-RC uses the full power of programming languages to create more complex tests like reading and writing files. querying a database, emailing test results.
3.	You'll want to use Selenium-RC whenever your test requires logic not supported by Selenium-IDE.
4.	What logic could thus be? For example, Selenium-IDE does not directly support:
●	Condition statements
●	Iteration
●	Logging and reporting of test results
1.	Error handling, particularly unexpected errors
2.	Database testing
3.	Test case grouping
4.	Re-execution of failed tests
5.	Although these tasks are not supported by Selenium directly, all of them can be achieved by using programming techniques with a language-specific Selenium-RC client library
6.	Steps to add jar Files in java test Scripts:-
Project — Libraries → Add Jar Folder — add Selenium jar files
7.	Steps to run the above Program :-
Open Command prompt → go to folder C:\software testing > Run Write the following Command:
Java -jar selenium-server-standalone-2.53.0.jar 4444


SOURCE:
1.	Javascript to develop a web page which calculmes se GCD of 2 numbers-
<html>
<head>
<script type="text/javascript"> function gcd(){
var x,y; x=parseInt(document.myform.n1.value); y=parseInt(document.myform.n2.value); while(x!=y){
if(x>y) x=x-y; else y=y-x;
}
document.myform.result.value=x;
}
</script>
</head>
<body>
<form name="myform">
Number 1:<input type="text" name="n1" value=""> Number 2:<input type="text" name="n2" value="">
<input type="button" value="GCD" name="btn" onClick="gcd()"> GCD is:<input type="text" name="result" value="">
</form>
</body>
</html>


code:-
package gcd;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
public class gcd {
public static void main(String[] args) {
System.setProperty("webdriver.chrome.driver", "C:\\software testing\\chromedriver.exe");
WebDriver driver=new ChromeDriver();
driver.get("file:///C:/software%20testing/gcd.html");
driver.findElement(By.name("n1")).sendKeys("20");
driver.findElement(By.name("n2")).sendKeys("15");
driver.findElement(By.name("btn")).click();
String result=driver.findElement(By.name("result")).getAttribute("name=result");
}
}


    </code>

</html>
