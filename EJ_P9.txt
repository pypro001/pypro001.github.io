Practical No. 9

Part A:
AIM: Develop simple shopping cart application using EJB [Stateful Session Bean].
Files Used:
index.jsp
ShoppingCart.java
Code:
SQL Queries:
CREATE DATABASE Cart;
USE Cart;
CREATE TABLE Cart(
Username varchar(35),
ItemName varchar(50));
index.jsp
<%@page import="java.util.Iterator, java.util.List, javax.naming.InitialContext, ejb.ShoppingCart"%>
<%@page contentType="text/html" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<%!
private static ShoppingCart cart;
public void jspInit() {
try {
InitialContext ic = new InitialContext();
cart = (ShoppingCart) ic.lookup("java:global/ShoppingCart/ShoppingCart");
} catch (Exception ex) {
System.out.println("Could not create cart bean." + ex.getMessage());
}
}
%>
<%
if(request.getParameter("txtCustomerName") != null) {
cart.initialize(request.getParameter("txtCustomerName"));
} else {
cart.initialize("Guest");
}
if (request.getParameter("btnRmvBook") != null) {
String books[] = request.getParameterValues("chkBook");
if (books != null) {
for (int i=0; i<books.length; i++) {
cart.removeBook(books[i]);
}
}
}
if (request.getParameter("btnAddBook") != null) {
String books[] = request.getParameterValues("chkBook");
if (books != null) {
for (int i=0; i<books.length; i++) {
cart.addBook(books[i]);
}
}
}
%>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Shopping Cart</title>
</head>
<body style="background-color: pink;">
<h1 style="text-align: center;">Books For Sale</h1><br>
<form name="frmBooks" method="post">
Customer: <input type="text" name="txtCustomerName" value=<%= request.getParameter("txtCustomerName")%> />
<br>
<hr>
<b>Book Titles</b> <br> <hr>
<input type="checkbox" name="chkBook" value="Struts 2.0 For Beginners"> Struts 2.0 For Beginners</td>
<br> <input type="checkbox" name="chkBook" value="Oracle 11g For Professionals"> Oracle 11g For Professionals</td>
<br><input type="checkbox" name="chkBook" value="Hibernate 3 For Beginners"> Hibernate 3 For Beginners</td>
<br><input type="checkbox" name="chkBook" value="Java Persistence API In EJB 3 For Beginners"> Java Persistence API In EJB 3 For Beginners</td>
<br><input type='submit' value='Add To My Basket' name='btnAddBook'>
<br><input type='submit' value='Remove From My Basket' name='btnRmvBook'>
<br><hr>
Basket: <br>
<hr>
<%
if(cart!=null){
List<String> bookList = cart.getContents();
Iterator iterator = bookList.iterator();
while (iterator.hasNext()) {
String title = (String) iterator.next();
%>
<%= title %> <br>
<%
}
}
%>
</form>
</body>
</html>
ShoppingCart.java
package ejb;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import javax.ejb.Remove;
import javax.ejb.Stateful;
@Stateful
public class ShoppingCart {
List<String> contents;
String customerName;
private Connection conn = null;
private ResultSet rs;
private Statement stmt = null;
private String query = null;
public void initialize(String person) {
if (person != null) {
customerName = person;
try {
Class.forName("com.mysql.jdbc.Driver").newInstance();
conn = DriverManager.getConnection("jdbc:mysql://localhost/Cart", "root", "root");
} catch(Exception e) {
System.err.println("Sorry failed to connect to the Database." + e.getMessage());
}
}
contents = new ArrayList<>();
}
public void addBook(String title) {
try {
stmt = conn.createStatement();
query = "INSERT INTO Cart VALUES('" + customerName + "','" + title + "')";
stmt.executeUpdate(query);
} catch(SQLException e) {
System.err.println("Sorry failed to insert values from the database table. " + e.getMessage());
}
}
public void removeBook(String title) {
try {
stmt = conn.createStatement();
query = "DELETE FROM Cart WHERE UserName='" + customerName + "' AND ItemName='" + title + "'";
stmt.executeUpdate(query);
} catch(SQLException e) {
System.err.println("Sorry failed to delete values from the database table. " + e.getMessage());
}
}
public List<String> getContents() {
try {
stmt = conn.createStatement();
query = "SELECT * FROM Cart WHERE UserName='" + customerName + "'";
rs = stmt.executeQuery(query);
while(rs.next()) {
contents.add(rs.getString("ItemName"));
}
} catch(SQLException e) {
System.err.println("Sorry failed to select values from the database table. " + e.getMessage());
}
return contents;
}
@Remove()
public void remove() {
contents = null;
}
}


Part B:
Aim: Develop simple visitor Statistics application using Message Driven Bean [Stateless
Session Bean].
Files Used:
index.jsp
BasicMessageBean
VisitorStatBean.java
Code:
SQL Queries:
mysql> create database visitorstats;
Query OK, 1 row affected (0.03 sec)
mysql> use visitorstats;
Database changed
mysql> create table userstats(hostname varchar(30) PRIMARY KEY, visits int);
Query OK, 0 rows affected (0.06 sec)
index.jsp:
<%@page import="javax.jms.JMSException, javax.naming.InitialContext, javax.jms.TextMessage, javax.jms.MessageProducer, javax.jms.Session, javax.jms.Connection, javax.jms.Queue, javax.jms.ConnectionFactory" %>
<%@page contentType="text/html" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<%!
private static ConnectionFactory connectionFactory;
private static Queue queue;
Connection connection = null;
Session mysession = null;
MessageProducer messageProducer = null;
TextMessage message = null;
%>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Welcome To Message Bean Demo</title>
</head>
<body style="background-color: aquamarine;">
<h1>Welcome Message Bean Demo</h1>
<%
try {
InitialContext ctx = new InitialContext();
queue = (Queue) ctx.lookup("jms/Queue");
connectionFactory = (ConnectionFactory) ctx.lookup("jms/QueueFactory");
connection = connectionFactory.createConnection();
mysession = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
messageProducer = mysession.createProducer(queue);
message = mysession.createTextMessage();
message.setText(request.getRemoteHost());
messageProducer.send(message);
} catch (JMSException e) {
System.out.println("Exception occurred: " + e.toString());
}
%>
</body>
</html>
BasicMessageBean.java
package ejb;
import javax.annotation.Resource;
import javax.ejb.ActivationConfigProperty;
import javax.ejb.EJB;
import javax.ejb.MessageDriven;
import javax.ejb.MessageDrivenContext;
import javax.jms.JMSException;
import javax.jms.Message;
import javax.jms.MessageListener;
import javax.jms.TextMessage;
@MessageDriven(activationConfig = {
@ActivationConfigProperty(propertyName = "destinationType", propertyValue = "javax.jms.Queue"),
@ActivationConfigProperty(propertyName = "destinationLookup", propertyValue = "jms/Queue")
})
public class BasicMessageBean implements MessageListener {
@EJB
VisitorStatBean vs;
@Resource
private MessageDrivenContext mdc;
public BasicMessageBean() {
}
@Override
public void onMessage(Message message) {
try {
if (message instanceof TextMessage) {
TextMessage msg = (TextMessage) message;
vs.addVisitor(msg.getText());
}
} catch (JMSException e) {
mdc.setRollbackOnly();
}
}
}
VisitorStatBean.java
package ejb;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;
import javax.ejb.Stateless;
@Stateless
public class VisitorStatBean {
private Connection conn = null;
private ResultSet rs;
private Statement stmt = null;
private String query = null;
@PostConstruct
public void connect() {
try {
Class.forName("com.mysql.jdbc.Driver").newInstance();
conn = DriverManager.getConnection("jdbc:mysql://localhost/visitorstats", "root", "root");
System.out.println("Database connection established successfully.");
} catch(Exception e) {
System.err.println("Sorry failed to connect to the Database.");
}
}
@PreDestroy
public void disconnect() {
try {
conn.close();
System.out.println("Database connection closed successfully.");
} catch(SQLException e) {
System.err.println("Cannot close the database connection: " + e.getMessage());
}
}
public void addVisitor(String host) {
try {
stmt = conn.createStatement();
query = "INSERT INTO userstats (hostname, visits) VALUES('" + host + "','1')";
stmt.executeUpdate(query);
} catch(SQLException e) {
try {
stmt = conn.createStatement();
query = "UPDATE userstats SET visits = visits + 1 WHERE hostname = '" + host + "'";
stmt.executeUpdate(query);
} catch(SQLException ex) {
System.err.println("Cannot update: " + ex.getMessage());
}
}
}
}

