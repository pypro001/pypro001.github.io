		practical -04
Create an Android application to demonstrate implicit and explicit intents in kotlin

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp">

    <TextView
        android:id="@+id/text_view"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Hello, World!" />

    <Button
        android:id="@+id/explicit_intent_button"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Send Explicit Intent" />

    <Button
        android:id="@+id/implicit_intent_button"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Send Implicit Intent" />

</LinearLayout>


first kt file
package com.example.intentdemo

import android.content.Intent
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.view.View
import android.widget.Button

class MainActivity : AppCompatActivity(), View.OnClickListener {

    private lateinit var textView: TextView
    private lateinit var explicitIntentButton: Button
    private lateinit var implicitIntentButton: Button

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        textView = findViewById(R.id.text_view)
        explicitIntentButton = findViewById(R.id.explicit_intent_button)
        implicitIntentButton = findViewById(R.id.implicit_intent_button)

        explicitIntentButton.setOnClickListener(this)
        implicitIntentButton.setOnClickListener(this)
    }

    override fun onClick(v: View?) {
        when(v?.id) {
            R.id.explicit_intent_button -> {
                val intent = Intent(this, SecondActivity::class.java)
                intent.putExtra("message", "Hello from MainActivity!")
                startActivity(intent)
            }
            R.id.implicit_intent_button -> {
                val intent = Intent(Intent.ACTION_SEND)
                intent.type = "text/plain"
                intent.putExtra(Intent.EXTRA_TEXT, "Hello from MainActivity!")
                startActivity(Intent.createChooser(intent, "Send message"))
            }
        }
    }
}


secode kt file>>>>>>>>>>>>>>>>>>>>

package com.example.intentdemo

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.TextView

class SecondActivity : AppCompatActivity() {

    private lateinit var textView: TextView

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_second)

        textView = findViewById(R.id.text_view)

        val message = intent.getStringExtra("message")
        textView.text = message
    }
}



<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

Create an application to demonstrate shared preferences in kotlin


<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp">

    <EditText
        android:id="@+id/edit_text"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter text to save" />

    <Button
        android:id="@+id/save_button"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Save Text" />

    <Button
        android:id="@+id/load_button"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Load Text" />

    <TextView
        android:id="@+id/text_view"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Saved Text Will Appear Here"
        android:textAlignment="center"
        android:textSize="24sp" />

</LinearLayout>




kt file><>>>>>>>>>>>>>><<<<<<<<<<<

package com.example.sharedpreferencesdemo

import android.content.Context
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.Button
import android.widget.EditText
import android.widget.TextView

class MainActivity : AppCompatActivity() {

    private lateinit var editText: EditText
    private lateinit var saveButton: Button
    private lateinit var loadButton: Button
    private lateinit var textView: TextView
    private val sharedPrefKey = "MY_SHARED_PREFERENCE"

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        editText = findViewById(R.id.edit_text)
        saveButton = findViewById(R.id.save_button)
        loadButton = findViewById(R.id.load_button)
        textView = findViewById(R.id.text_view)

        saveButton.setOnClickListener {
            val textToSave = editText.text.toString()
            saveText(textToSave)
        }

        loadButton.setOnClickListener {
            val savedText = loadText()
            textView.text = savedText
        }
    }

    private fun saveText(text: String) {
        val sharedPref = getSharedPreferences(sharedPrefKey, Context.MODE_PRIVATE)
        with (sharedPref.edit()) {
            putString(sharedPrefKey, text)
            apply()
        }
    }

    private fun loadText(): String {
        val sharedPref = getSharedPreferences(sharedPrefKey, Context.MODE_PRIVATE)
        return sharedPref.getString(sharedPrefKey, "") ?: ""
    }
}




